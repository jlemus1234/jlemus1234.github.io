{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/NavigationBar.jsx","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","NavigationBar","_this","_React$Component","call","this","state","addLinks","bar","i","pageList","length","push","react_default","key","style","marginRight","fontWeight","currentPage","gatsby_browser_entry","to","links","createNavBar","Array","isArray","console","log","container","Component","color","textDecoration","fontFamily","linkPMargin","textWeight","display","justifyContent","marginLeft","defaultProps","Header","siteTitle","borderBottom","padding","margin","components_NavigationBar","Layout","header","site","siteMetadata","paddingTop","href","_755544856","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-404-js-90895c5a0326a269a787.js","sourcesContent":["import React from 'react'\r\n\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nclass NavigationBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    addLinks() {\r\n        let bar = []\r\n        for (var i = 0; i < this.props.pageList.length; i++) {\r\n            bar.push(\r\n                <p key={i} style={{\r\n                    marginRight: i < this.props.pageList.length - 1 ? '10px' : '0px',\r\n                    fontWeight: this.props.pageList[i][1] === this.props.currentPage ? 'bold' : ''\r\n                }}>\r\n                    <Link\r\n                        to={this.props.pageList[i][1]}\r\n                        style={style.links}\r\n                    >\r\n                        {this.props.pageList[i][0]}\r\n                    </Link>\r\n                </p>\r\n            )\r\n        }\r\n        return bar\r\n    }\r\n\r\n    createNavBar() {\r\n        // pageList is an array and not empty\r\n        if (Array.isArray(this.props.pageList) && this.props.pageList.length > 0) {\r\n            // every element inside it is an array of size two\r\n            for (var i = 0; i < this.props.pageList.length; i++) {\r\n                if (Array.isArray(this.props.pageList[i]) && this.props.pageList[i].length === 2) {\r\n                    return (this.addLinks())\r\n                }\r\n            }\r\n        }\r\n        console.log(\"PageList error: Check that prop is passed in correctly\")\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={style.container}>\r\n                {this.createNavBar()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst style = {\r\n    links: {\r\n        color: 'black',\r\n        textDecoration: 'none',\r\n        fontFamily: 'bahnschrift'\r\n    },\r\n\r\n    linkPMargin: {\r\n        marginRight: '10px'\r\n    },\r\n\r\n    currentPage: {\r\n        textWeight: 'bold'\r\n    },\r\n\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        marginLeft: '10px'\r\n    }\r\n}\r\n\r\nNavigationBar.defaultProps = {\r\n    // array of two element string arrays [[name, page]]\r\n    pageList: [],\r\n    currentPage: ''\r\n}\r\n\r\nexport default NavigationBar;\r\n\r\n","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nimport NavigationBar from '../components/NavigationBar'\r\n\r\nconst Header = ({ siteTitle, currentPage }) => (\r\n  <div\r\n    style={{\r\n      //background: 'rgb(240,240,240)',\r\n      // marginBottom: `1.45rem`,\r\n      borderBottom: '1px solid silver'\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        //margin: `0 auto`,\r\n        // maxWidth: 960, // this is set here, and also in the layout component\r\n        padding: `1.45rem 1.0875rem`,\r\n        //adding\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n      }}\r\n    >\r\n      <h3 style={{\r\n        margin: 0,\r\n        // adding \r\n        display: 'inline-block'\r\n      }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `black`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h3>\r\n\r\n      <NavigationBar\r\n        pageList={[/*[\"Home\", \"/\"]*/ [\"Projects\", \"/projects\"], [\"Writing\", \"/writing\"], [\"Resume\", \"/resume\"], [\"About\", \"/AboutMe\"]]}\r\n        currentPage={currentPage}\r\n      />\r\n    </div>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ children, currentPage }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} currentPage={currentPage} />\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            //maxWidth: 960,\r\n            //padding: `0px 1.0875rem 1.45rem`,\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          {children}\r\n          <footer>\r\n            © 2020, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}